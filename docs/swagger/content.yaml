openapi: '3.0.1'
info:
  description: |
    Welcome to the HumHub content module API reference.

  version: 1.0.0
  title: HumHub - Content API
  contact:
    email: info@humhub.com
  license:
    name: AGPLv2
    url: 'https://www.humhub.org/en/licences'
basePath: /api/v1
schemes:
  - http
  - https
tags:
  - name: Content
    description: API to access and manage content information.
    externalDocs:
      description: Find out more
      url: 'http://docs.humhub.org'
  - name: Container
    description: API to access and manage content containers.
    externalDocs:
      description: Find out more
      url: 'http://docs.humhub.org'
  - name: Tags
    description: Group API
components:
  parameters:
    topicsParam:
      in: query
      name: topics
      required: false
      schema:
        type: string
      description: Coma separated list of topics to filter
      example: "Music,Dancing"
paths:
  /content/container:
    get:
      tags:
        - Container
      summary: Find all content container
      description: ''
      produces:
        - application/json
      parameters:
        - $ref: 'common.yaml#/components/parameters/pageParam'
        - $ref: 'common.yaml#/components/parameters/limitParam'
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              total:
                $ref: 'common.yaml#/components/properties/totalProperty'
              page:
                $ref: 'common.yaml#/components/properties/pageProperty'
              pages:
                $ref: 'common.yaml#/components/properties/pagesProperty'
              links:
                $ref: 'common.yaml#/components/properties/linksProperty'
              results:
                type: array
                items:
                  $ref: '#/definitions/ContentContainer'

  /content/findByContainer/{id}:
    get:
      tags:
        - Content
      summary: Find all content by container
      description: ''
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The id of the content container
          required: true
          type: integer
        - $ref: 'common.yaml#/components/parameters/pageParam'
        - $ref: 'common.yaml#/components/parameters/limitParam'
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              total:
                $ref: 'common.yaml#/components/properties/totalProperty'
              page:
                $ref: 'common.yaml#/components/properties/pageProperty'
              pages:
                $ref: 'common.yaml#/components/properties/pagesProperty'
              links:
                $ref: 'common.yaml#/components/properties/linksProperty'
              results:
                type: array
                items:
                  $ref: '#/definitions/Content'
        '400':
          description: Invalid content container id supplied
        '404':
          description: Content container not found

  '/content/{id}':
    get:
      tags:
        - Content
      summary: Get content by id
      description: ''
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The id of the content
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            $ref: "#/definitions/Content"
        '400':
          description: Invalid content id supplied
        '404':
          description: Content not found
    delete:
      tags:
        - Content
      summary: Deletes a content by id
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The id of content
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
        '404':
          description: Content not found

securityDefinitions:
  $ref: "common.yaml#/securityDefinitions"

definitions:

  Content:
    type: object
    properties:
      metadata:
        $ref: "#/definitions/ContentMetadata"
      comments:
        type: object
        $ref: "comment.yaml#/definitions/CommentsSummary"
      likes:
        type: object
        $ref: "like.yaml#/definitions/LikesSummary"
      files:
        type: object
        $ref: "file.yaml#/definitions/Files"
      topics:
        type: object
        $ref: "#/definitions/Topics"

  ContentMetadata:
    type: object
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
        example: 14
      guid:
        type: string
        readOnly: true
        example: cd081891-d2e2-40d5-84a4-b47309e71c80
      url:
        type: string
        readOnly: true
        example: "http://localhost/p/humhub/master/content/perma?id=109"
      created_by:
        $ref: "user.yaml#/definitions/UserShort"
      created_at:
        type: string
        readOnly: true
        example:
      contentcontainer_id:
        type: integer
        format: int64
        example: 5
      stream_channel:
        type: string
        readOnly: true
        example: default

  Topics:
    type: object
    properties:
      topic:
        type: array
        $ref: "#/definitions/Topic"

  Topic:
    type: object
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
        example: 135
      name:
        type: string
        readOnly: true
        example: News

  ContentContainer:
    type: object
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
        example: 14
      guid:
        type: string
        readOnly: true
        example: cd081891-d2e2-40d5-84a4-b47309e71c80
      objectClass:
       type: string
       readOnly: true
       example: 'humhub\modules\user\models\User'
      objectPk:
       type: integer
       format: int64
       readOnly: true
       example: 53

