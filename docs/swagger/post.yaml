openapi: '3.0.1'
info:
  description: |
    Welcome to the HumHub post module API reference.

  version: 1.0.0
  title: HumHub - Post API
  contact:
    email: info@humhub.com
  license:
    name: AGPLv2
    url: 'https://www.humhub.org/en/licences'
basePath: /api/v1

paths:
  '/post/container/{id}':
    get:
      summary: Find all posts by container
      description: ''
      produces:
        - application/json
        - application/xml
      parameters:
        - name: id
          in: path
          description: ID of content container
          required: true
          type: integer
        - $ref: 'content.yaml#/components/parameters/topicsParam'
        - $ref: 'common.yaml#/components/parameters/pageParam'
        - $ref: 'common.yaml#/components/parameters/limitParam'
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              total:
                $ref: 'common.yaml#/components/properties/totalProperty'
              page:
                $ref: 'common.yaml#/components/properties/pageProperty'
              pages:
                $ref: 'common.yaml#/components/properties/pagesProperty'
              links:
                $ref: 'common.yaml#/components/properties/linksProperty'
              results:
                type: array
                items:
                  $ref: '#/definitions/Post'
    post:
      summary: Creates a new post
      description: ''
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of content container to post to
          required: true
          type: integer
        - name: body
          in: body
          description: The post
          required: true
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: "#/definitions/Post"
      responses:
        '200':
          description: successful operation
          schema:
            $ref: "#/definitions/Post"
        '400':
          description: Invalid post id supplied
        '404':
          description: Post not found
  '/post':
    get:
      summary: Find all posts
      description: ''
      produces:
        - application/json
        - application/xml
      parameters:
        - $ref: 'common.yaml#/components/parameters/pageParam'
        - $ref: 'common.yaml#/components/parameters/limitParam'
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              total:
                $ref: 'common.yaml#/components/properties/totalProperty'
              page:
                $ref: 'common.yaml#/components/properties/pageProperty'
              pages:
                $ref: 'common.yaml#/components/properties/pagesProperty'
              links:
                $ref: 'common.yaml#/components/properties/linksProperty'
              results:
                type: array
                items:
                  $ref: '#/definitions/Post'

  '/post/{id}':
    get:
      summary: Get post by id
      description: ''
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The id of the post
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            $ref: "#/definitions/Post"
        '400':
          description: Invalid post id supplied
        '404':
          description: Post not found
    put:
      summary: Updates a post by id
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The id of post
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
        '404':
          description: Post not found
    delete:
      summary: Deletes a post by id
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The id of post
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
        '404':
          description: Post not found

securityDefinitions:
  $ref: "common.yaml#/securityDefinitions"

definitions:
  Post:
    type: object
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
        example: 14
      message:
        type: string
        example: "Calvin Klein â€“ Between love and madness lies obsession."
      content:
        readOnly: true
        $ref: "content.yaml#/definitions/Content"